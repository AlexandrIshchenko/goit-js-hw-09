{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAItC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAZPR,EAAKiB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAEC,iBAMA,IAJF,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAErBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCnB,EAAcmB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBlB,EAAA+B,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,MAAK,CAC5DI,MAAO,QACPC,SAAU,Q,IAGbC,OAAM,SAAAP,G,IAAGpB,EAAQoB,EAARpB,SAAU4B,EAAKR,EAALX,MAClBlB,EAAA+B,OAAOO,QAAQ,oBAAmCL,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,MAAK,CAC3DH,MAAO,QACPC,SAAU,Q,IAGhBb,GAAcG,EAElBvB,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector('.form')\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener(\"submit\", onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n    for (let i = 1; i <= amountValue; i += 1) {\n\n      createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n            width: '400px',\n            fontSize: '20px',\n          },);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n            width: '400px',\n            fontSize: '20px',\n          },);\n        });\n      delayValue += stepValue;\n    }\n  form.reset();\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","delay2","Notify","success","concat","width","fontSize","catch","delay3","failure","reset"],"version":3,"file":"03-promises.cbaa3d6b.js.map"}