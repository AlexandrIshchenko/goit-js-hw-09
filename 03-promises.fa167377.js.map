{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAItC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAZbR,EAAKiB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCnB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjB7B,EAAA8B,OAAOC,QAAQ,qBAAqBtB,QAAeoB,MAAW,CAC5DG,MAAO,QACPC,SAAU,QACT,IAEJC,OAAM,EAACzB,SAAEA,EAAUS,MAAAiB,MAClBnC,EAAA8B,OAAOM,QAAQ,oBAAoB3B,QAAe0B,MAAW,CAC3DH,MAAO,QACPC,SAAU,QACT,IAEPX,GAAcG,EAElBvB,EAAKmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector('.form')\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener(\"submit\", onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n    for (let i = 1; i <= amountValue; i += 1) {\n\n      createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n            width: '400px',\n            fontSize: '20px',\n          },);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n            width: '400px',\n            fontSize: '20px',\n          },);\n        });\n      delayValue += stepValue;\n    }\n  form.reset();\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","delay2","Notify","success","width","fontSize","catch","delay3","failure","reset"],"version":3,"file":"03-promises.fa167377.js.map"}